##################################################################################
#################################### Server ######################################
##################################################################################

server.port = 50
spring.profiles.active = local




##################################################################################
#################################### Database ####################################
##################################################################################

# H2
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:tcp://localhost/~/pte
spring.datasource.username = sa
spring.datasource.password =



#############################################################################
#################################### JPA ####################################
#############################################################################
spring.jpa.hibernate.ddl-auto = create
#spring.properties.hibernate.show_sql = true                // System.out Log, 쓰지 않는걸 추천
spring.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments = true     // QueryDSL 은 JPQL 빌더 역할로 결국 JPQL 로 쿼리가 실행되니, 확인을 위해 설정



#############################################################################
#################################### log ####################################
#############################################################################
spring.logging.level.org.hibernate.SQL = debug      // Logger Log
spring.logging.level.org.hibernate.type = trace     // 데이터 바인딩 Log, 쓰지 않는걸 추천



#############################################################################
################################# oauth2.0 ##################################
#############################################################################

spring.profiles.include=oauth

# 구글
spring.security.oauth2.client.registration.google.clientId=1041966523985-tdu7dnuqaog7b2h8tip9t1nte108i25u.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=uveakHSeg5W6qGbTDDzlcts3
spring.security.oauth2.client.registration.google.scope = email, profile

# 카카오
spring.security.oauth2.client.registration.kakao.clientId=3e8936e114d851142a6898b0a1c145a5